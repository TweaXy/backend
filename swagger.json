{
    "info": {
        "title": "Twitter Express API with Swagger",
        "version": "0.1.0",
        "description": "This is a Social media API made with Express and documented with Swagger"
    },
    "swagger": "2.0",
    "paths": {
        "/auth/signup": {
            "post": {
                "summary": "create & authincate new user",
                "tags": ["Auth"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "name",
                                    "birthdayDate",
                                    "password",
                                    "emailVerificationToken",
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "description": "The email of the user (must be unique).",
                                        "format": "email",
                                        "example": "aliaagheis@gmail.com"
                                    },
                                    "username": {
                                        "type": "string",
                                        "description": "unique username of user.",
                                        "enum": ["tweexy123"]
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "screen name of user.",
                                        "enum": ["tweexy cool"]
                                    },
                                    "birthdayDate": {
                                        "type": "string",
                                        "description": "unique username of user.",
                                        "format": "Date",
                                        "enum": ["10-17-2002"]
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "password of user.",
                                        "format": "password",
                                        "enum": ["12345678tT@"]
                                    },
                                    "emailVerificationToken": {
                                        "type": "string",
                                        "description": "token send to email to verify it.",
                                        "enum": ["123f08"]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User created successfully. the token is returned in a cookie named `token`.\n",
                        "headers": {
                            "Set-Cookie": {
                                "schema": {
                                    "type": "string",
                                    "example": "token=abcde12345; Path=/; HttpOnly"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "username": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "avatar": {
                                                    "type": "bytes"
                                                },
                                                "phone": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "username": "aliaagheis",
                                            "name": "aliaa gheis",
                                            "email": "aliaagheis@gmail.com",
                                            "avatar": [21, 12, 12],
                                            "phone": "01118111210"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Email or username is already in the database.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": [
                                                "there is a user in database with same email or username"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "verification token is invalid or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"]
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the error message",
                                            "enum": [
                                                "Token is invalid",
                                                "Token is expired"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden Request - validation fail.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "body.email is required field"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - no email verification exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "no email request verification found."
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/sendEmailVerification": {
            "post": {
                "summary": "Send an email verification to a user",
                "tags": ["Auth"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["email"],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "description": "The email of the user (must be unique).",
                                        "format": "email"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verification sent successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "object",
                                            "description": null
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": null
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Email is already in the database.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Email is already exists and verified"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden Request - validation fail.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "body.email is required field"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "More than one request in less than 30 seconds",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"]
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the error message",
                                            "enum": [
                                                "More than one request in less than 30 seconds"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/forgetPassword": {
            "post": {
                "summary": "Send an email to a user with token and url to reset password",
                "tags": ["Auth"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["UUID"],
                                "properties": {
                                    "UUID": {
                                        "type": "string",
                                        "description": "unique user identifer it could an email or username or phone.",
                                        "format": "email | username | phone"
                                    }
                                },
                                "example": {
                                    "UUID": "aliaa@aliaa.com"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email with token sent successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "object",
                                            "description": null
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": null
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden Request - validation fail.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "email or phone or username is required field"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - no user exist with (username | email | phone).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": ["User not found."]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "More than one request in less than 30 seconds",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"]
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the error message",
                                            "enum": [
                                                "More than one request in less than 30 seconds"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/resetPassword/{UUID}/{token}": {
            "post": {
                "summary": "reset user password to new password if the token is valid",
                "tags": ["Auth"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "UUID",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "unique user identifer it could an email or username or phone."
                    },
                    {
                        "in": "path",
                        "name": "token",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "token sent to user email."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["password"],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "description": "new password to reset it.",
                                        "format": "password"
                                    }
                                },
                                "example": {
                                    "password": "12345678aA@"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password Reset successfully. the token is returned in a cookie named `token`.\n",
                        "headers": {
                            "Set-Cookie": {
                                "schema": {
                                    "type": "string",
                                    "example": "token=abcde12345; Path=/; HttpOnly"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "object",
                                            "description": null
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": null
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "token is invalid or expired or when user don't have reset token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"]
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the error message",
                                            "enum": [
                                                "Token is invalid",
                                                "Token is expired",
                                                "User does not have reset token"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden Request - validation fail.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "password must contain at least 1 number"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - no user exist with (username | email | phone).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": ["User not found."]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "summary": "login the user(return user basic information and create a token for the user).",
                "tags": ["Auth"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": "-UUID - password",
                                "properties": {
                                    "UUID": {
                                        "type": "string",
                                        "description": "unique user identifer it could an email or username or phone.",
                                        "format": "email | username | phone"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "password of the user.",
                                        "format": "password"
                                    }
                                },
                                "example": {
                                    "UUID": "fdsd@gmail.com",
                                    "password": "12345678aA@"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "user logged in successfully.\n the token is returned in a cookie named `token`.\n",
                        "headers": {
                            "Set-Cookie": {
                                "schema": {
                                    "type": "string",
                                    "example": "token=abcde12345; Path=/; HttpOnly"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "username": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "avatar": {
                                                    "type": "bytes"
                                                },
                                                "phone": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "username": "aliaagheis",
                                            "name": "aliaa gheis",
                                            "email": "aliaagheis@gmail.com",
                                            "avatar": [21, 12, 12],
                                            "phone": "01118111210"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "password is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"]
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the error message"
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "wrong password"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden Request - validation fail.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "UUID is required field"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - no user found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "no user found"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "summary": "logout the user(delete the token of the user).",
                "tags": ["Auth"],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user logout successfully successfully.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        }
                                    },
                                    "example": {
                                        "status": "success"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "user not authorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "please authenticate"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/conversation?limit=value&offset=value/{toID}": {
            "get": {
                "summary": "get messages between 2 users",
                "tags": ["Conversation"],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "toID",
                        "in": "path",
                        "description": "the id of the user who will recieve the message",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "number of items in each page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "number of skipped items",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "get messages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "text": {
                                                        "type": "string"
                                                    },
                                                    "media": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "createdAt": {
                                                        "type": "DateTime"
                                                    },
                                                    "seen": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "itemsNumber": {
                                                    "type": "integer"
                                                },
                                                "nextPage": {
                                                    "type": "string"
                                                },
                                                "prevPage": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": [
                                            {
                                                "text": "did you finish the ER digram?",
                                                "media": null,
                                                "createdAt": "2023-10-07T16:18:38.944Z",
                                                "seen": false
                                            },
                                            {
                                                "text": "hi nesma",
                                                "media": ["pic1", "pic2"],
                                                "createdAt": "2023-10-07T16:14:38.944Z",
                                                "seen": false
                                            }
                                        ],
                                        "pagination": {
                                            "itemsNumber": 20,
                                            "nextPage": "/conversation?limit=20&offset=20/{toID}",
                                            "prevPage": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": ["user not authorized."]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - no user with this id exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": ["no user found."]
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "no user found."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/conversation/{toID}": {
            "post": {
                "summary": "send or update message between 2 users",
                "tags": ["Conversation"],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "toID",
                        "in": "path",
                        "description": "the id of the user who recieved the message",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["text"],
                                "properties": {
                                    "text": {
                                        "type": "string",
                                        "description": "The message text content",
                                        "example": "This is my first message"
                                    },
                                    "media": {
                                        "type": "array",
                                        "description": "photos or videos included in the message",
                                        "example": ["pic1", "pic2"]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "send or update message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "text": {
                                                        "type": "string"
                                                    },
                                                    "media": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "createdAt": {
                                                        "type": "DateTime"
                                                    },
                                                    "seen": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "text": "did you finish the ER digram?",
                                            "media": ["pic1", "pic2"],
                                            "createdAt": "2023-10-07T16:18:38.944Z",
                                            "seen": false
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": ["user not authorized."]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - no user with this id exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": ["no user found."]
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "no user found."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/conversation?limit=value&offset=value": {
            "get": {
                "summary": "get friends who you have chat with and number of unseen conversations",
                "tags": ["Conversation"],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "number of items in each page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "number of skipped items",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get conversations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "unseenConversationsCount": {
                                                    "type": "integer"
                                                },
                                                "Conversations": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "userName": {
                                                                "type": "string"
                                                            },
                                                            "cover": {
                                                                "type": "string"
                                                            },
                                                            "lastMessage": {
                                                                "type": "string"
                                                            },
                                                            "lastMessageDate": {
                                                                "type": "DateTime"
                                                            },
                                                            "sender": {
                                                                "type": "string"
                                                            },
                                                            "unseenMessagesCount": {
                                                                "type": "integer"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "itemsNumber": {
                                                    "type": "integer"
                                                },
                                                "nextPage": {
                                                    "type": "string"
                                                },
                                                "prevPage": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "unseenConversationsCount": 2,
                                            "Conversations": [
                                                {
                                                    "name": "nehal",
                                                    "userName": "nehal_ali",
                                                    "cover": "pic1",
                                                    "lastMessage": "hellow world",
                                                    "lastMessageDate": "2023-11-07T16:18:38.944Z",
                                                    "sender": "you",
                                                    "unseenMessagesCount": 5
                                                },
                                                {
                                                    "name": "Aliaa",
                                                    "userName": "Aliaa_Ghais",
                                                    "cover": "pic2",
                                                    "lastMessage": "SW project is finished",
                                                    "lastMessageDate": "2023-11-07T16:18:38.944Z",
                                                    "sender": "you",
                                                    "unseenMessagesCount": 0
                                                }
                                            ]
                                        },
                                        "pagination": {
                                            "itemsNumber": 20,
                                            "nextPage": "/conversation?limit=2&offset=2",
                                            "prevPage": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": ["user not authorized."]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tweets/:id": {
            "post": {
                "summary": "create a tweet",
                "tags": ["Tweets"],
                "parameters": [
                    {
                        "name": "user id",
                        "in": "query",
                        "description": "the id of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "text",
                                    "media",
                                    "mentions",
                                    "trends"
                                ],
                                "properties": {
                                    "text": {
                                        "type": "string",
                                        "description": "The tweet text content",
                                        "example": "This is my first tweet"
                                    },
                                    "media": {
                                        "type": "array",
                                        "description": "photos or videos included in the tweet",
                                        "example": [
                                            [21, 23, 43],
                                            [44, 56, 76]
                                        ]
                                    },
                                    "mentions": {
                                        "type": "array",
                                        "description": "mentions in the tweet",
                                        "example": ["@bla", "@anything"]
                                    },
                                    "trends": {
                                        "type": "array",
                                        "description": "hashtags in the tweet",
                                        "example": ["#bla", "#anything"]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "create the tweet",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "text": {
                                                    "type": "string"
                                                },
                                                "media": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "bytes"
                                                        }
                                                    }
                                                },
                                                "mentions": {
                                                    "type": "array",
                                                    "items": "type:string"
                                                },
                                                "ternds": {
                                                    "type": "array",
                                                    "items": "type:string"
                                                }
                                            }
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": {
                                            "text": "This is my first tweet",
                                            "media": [
                                                [21, 23, 43],
                                                [44, 56, 76]
                                            ],
                                            "mentions": ["@bla", "@anything"],
                                            "trends": ["#bla", "#anything"]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - no user with this id exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": ["no user found."]
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "no user found."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "get tweets of a certain user",
                "tags": ["Tweets"],
                "parameters": [
                    {
                        "name": "user id",
                        "in": "query",
                        "description": "the id of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "get tweets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "createdAt": {
                                                        "type": "Date"
                                                    },
                                                    "text": {
                                                        "type": "string"
                                                    },
                                                    "media": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "bytes"
                                                            }
                                                        }
                                                    },
                                                    "mentions": {
                                                        "type": "array",
                                                        "items": "type:string"
                                                    },
                                                    "ternds": {
                                                        "type": "array",
                                                        "items": "type:string"
                                                    },
                                                    "likes": {
                                                        "type": "integer"
                                                    },
                                                    "reposts": {
                                                        "type": "integer"
                                                    },
                                                    "replies": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": [
                                            {
                                                "createdAt": "22-10-2023",
                                                "text": "this in text",
                                                "media": [
                                                    [21, 43, 76],
                                                    [33, 76, 65]
                                                ],
                                                "mentions": [
                                                    "@bla",
                                                    "@anything"
                                                ],
                                                "trends": ["@bla", "@anything"],
                                                "likes": 10,
                                                "reposts": 2,
                                                "replies": 5
                                            },
                                            {
                                                "createdAt": "29-10-2023",
                                                "text": "this in blabla",
                                                "media": [
                                                    [21, 43, 76],
                                                    [33, 76, 65]
                                                ],
                                                "mentions": ["@anything"],
                                                "trends": [],
                                                "likes": 5,
                                                "reposts": 1,
                                                "replies": 3
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - no user with this id exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": ["no user found."]
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "no user found."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tweets/:id/tweetid": {
            "delete": {
                "summary": "delete a tweet",
                "tags": ["Tweets"],
                "parameters": [
                    {
                        "name": "user id",
                        "in": "query",
                        "description": "the id of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "teewt id",
                        "in": "query",
                        "description": "the id of the tweet",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "delete tweet",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "object",
                                            "description": null
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": null
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - no user or tweet with this id exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": ["no user found."]
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "no user or tweet found."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tweets/:tweetid/replies": {
            "get": {
                "summary": "get replies of a certain tweet",
                "tags": ["Tweets"],
                "parameters": [
                    {
                        "name": "tweet id",
                        "in": "query",
                        "description": "the id of the tweet",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "get replies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "username": {
                                                        "type": "string"
                                                    },
                                                    "avatar": {
                                                        "type": "bytes"
                                                    },
                                                    "createdAt": {
                                                        "type": "Date"
                                                    },
                                                    "text": {
                                                        "type": "string"
                                                    },
                                                    "media": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "bytes"
                                                            }
                                                        }
                                                    },
                                                    "mentions": {
                                                        "type": "array",
                                                        "items": "type:string"
                                                    },
                                                    "ternds": {
                                                        "type": "array",
                                                        "items": "type:string"
                                                    },
                                                    "likes": {
                                                        "type": "integer"
                                                    },
                                                    "reposts": {
                                                        "type": "integer"
                                                    },
                                                    "replies": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": [
                                            {
                                                "name": "Eman",
                                                "username": "EmanElbedwihy",
                                                "avatar": [34, 67, 89],
                                                "createdAt": "22-10-2023",
                                                "text": "this in text",
                                                "media": [
                                                    [21, 43, 76],
                                                    [33, 76, 65]
                                                ],
                                                "mentions": [
                                                    "@bla",
                                                    "@anything"
                                                ],
                                                "trends": ["@bla", "@anything"],
                                                "likes": 10,
                                                "reposts": 2,
                                                "replies": 5
                                            },
                                            {
                                                "name": "Aya",
                                                "username": "AyaElbadry",
                                                "avatar": [34, 67, 89],
                                                "createdAt": "29-10-2023",
                                                "text": "this in blabla",
                                                "media": [
                                                    [21, 43, 76],
                                                    [33, 76, 65]
                                                ],
                                                "mentions": ["@anything"],
                                                "trends": [],
                                                "likes": 5,
                                                "reposts": 1,
                                                "replies": 3
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - no tweet with this id exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": ["no user found."]
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "no tweet found."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "summary": "Create a new users",
                "tags": ["Users"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The created user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Some server error"
                    }
                }
            },
            "get": {
                "summary": "Retrieve a list of  users.",
                "tags": ["Users"],
                "responses": {
                    "200": {
                        "description": "A list of users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "components": {
            "schemas": {
                "User": {
                    "type": "object",
                    "required": [
                        "id",
                        "username",
                        "name",
                        "email",
                        "password",
                        "birthdayDate",
                        "joinedDate"
                    ],
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "The auto-generated id of the user"
                        },
                        "email": {
                            "type": "string",
                            "description": "The email of user must be a unique",
                            "format": "email"
                        },
                        "username": {
                            "type": "string",
                            "description": "The username of user must be a unique"
                        },
                        "name": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "phone": {
                            "type": "string"
                        },
                        "cover": {
                            "type": "bytes",
                            "format": "x-image"
                        },
                        "avatar": {
                            "type": "bytes",
                            "format": "x-image"
                        },
                        "bio": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "website": {
                            "type": "string",
                            "format": "x-link"
                        },
                        "Tokens": {
                            "type": "string",
                            "description": "the Tokens for each user to authenticate"
                        },
                        "joinedAt": {
                            "type": "string",
                            "formate": "date",
                            "format": "x-date"
                        },
                        "birthdayDat": {
                            "type": "string",
                            "format": "x-date"
                        },
                        "ResetToken": {
                            "type": "string",
                            "description": "the code used to reset password"
                        }
                    },
                    "example": {
                        "id": "clo4glaw00000vlcohum0n8z3",
                        "username": "Warren_Breitenberg",
                        "name": "treva",
                        "email": "Mazie@gmail.com",
                        "phone": "07019778111",
                        "password": "00000000",
                        "location": "North Reubenchester",
                        "website": "https:capital-charger.net",
                        "joinedAt": "2023-10-24T15:05:54.528Z",
                        "birthdayDate": "1976-03-04"
                    }
                }
            }
        },
        "/users/checkEmailUniqueness": {
            "get": {
                "summary": "check email uniqueness",
                "tags": ["Users"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["email"],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "description": "The email of the user .",
                                        "format": "email",
                                        "example": "aliaagheis@gmail.com"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email has not been used before(unique).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "object",
                                            "description": null
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": null
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Email has been used before.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": ["email already exists"]
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "no user found."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/:id/blocks": {
            "get": {
                "summary": "get list of blocks",
                "tags": ["Users"],
                "parameters": [
                    {
                        "name": "user id",
                        "in": "query",
                        "description": "the id of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "get list of blocks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "username": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "avatar": {
                                                        "type": "bytes"
                                                    },
                                                    "bio": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": [
                                            {
                                                "username": "EmanElbedwihy",
                                                "name": "Eman",
                                                "avatar": [21, 12, 12],
                                                "bio": "CUFE"
                                            },
                                            {
                                                "username": "AyaElbadry",
                                                "name": "Aya",
                                                "avatar": [21, 12, 12],
                                                "bio": "pharmacy student HUE"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - no user with this id exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": ["no user found."]
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "no user found."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/:id/blocks/:id": {
            "delete": {
                "summary": "delete block",
                "tags": ["Users"],
                "parameters": [
                    {
                        "name": "blocker id",
                        "in": "query",
                        "description": "the id of the user(blocker)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "blocked id",
                        "in": "query",
                        "description": "the id of the user(blocked)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "delete block",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "object",
                                            "description": null
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": null
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - no user with this id exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": ["no user found."]
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "no user found."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/:id/mutes/:id": {
            "post": {
                "summary": "mute a certain user",
                "tags": ["Users"],
                "parameters": [
                    {
                        "name": "muter id",
                        "in": "query",
                        "description": "the id of the user(muter)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "muted id",
                        "in": "query",
                        "description": "the id of the user(muted)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "mutes a user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "object",
                                            "description": null
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": null
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - no user with this id exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": ["no user found."]
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "no user found."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "delete mute",
                "tags": ["Users"],
                "parameters": [
                    {
                        "name": "muter id",
                        "in": "query",
                        "description": "the id of the user(muter)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "muted id",
                        "in": "query",
                        "description": "the id of the user(muted)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "delete mute",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "object",
                                            "description": null
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": null
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - no user with this id exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": ["no user found."]
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "no user found."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/:id/mutes": {
            "get": {
                "summary": "get list of mutes",
                "tags": ["Users"],
                "parameters": [
                    {
                        "name": "user id",
                        "in": "query",
                        "description": "the id of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "get list of blocks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["success"]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "username": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "avatar": {
                                                        "type": "bytes"
                                                    },
                                                    "bio": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "example": {
                                        "status": "success",
                                        "data": [
                                            {
                                                "username": "EmanElbedwihy",
                                                "name": "Eman",
                                                "avatar": [21, 12, 12],
                                                "bio": "CUFE"
                                            },
                                            {
                                                "username": "AyaElbadry",
                                                "name": "Aya",
                                                "avatar": [21, 12, 12],
                                                "bio": "pharmacy student HUE"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - no user with this id exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["fail"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": ["no user found."]
                                        }
                                    },
                                    "example": {
                                        "status": "fail",
                                        "message": "no user found."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong on the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": ["error"],
                                            "description": "The status of the response."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A general error message."
                                        }
                                    },
                                    "example": {
                                        "status": "error",
                                        "message": "Internal Server Error"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {},
    "responses": {},
    "parameters": {},
    "securityDefinitions": {},
    "tags": [
        {
            "name": "Auth",
            "description": "The Users authentication API"
        },
        {
            "name": "Tweets",
            "description": "The Tweets managing API"
        },
        {
            "name": "Users",
            "description": "The Users managing API"
        }
    ]
}
